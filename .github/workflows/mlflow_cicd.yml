name: MLflow CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libssl-dev zlib1g-dev \
                                libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
                                libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev \
                                liblzma-dev git
        python -m pip install --upgrade pip
        pip install -r $GITHUB_WORKSPACE/requirements.txt
        pip install mlflow

    - name: Run MLflow Project
      run: python $GITHUB_WORKSPACE/scripts/train_model.py

    - name: Evaluate model
      run: python $GITHUB_WORKSPACE/scripts/evaluate_model.py --model_name SimpleNN --model_version 1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/mlflow_cicd:latest $GITHUB_WORKSPACE/mlflow_cicd
        docker push ${{ secrets.DOCKER_USERNAME }}/mlflow_cicd:latest

    - name: Run Docker container
      run: |
        docker ps -a --format "{{.Names}}" | grep -w "mlflow_cicd_container" && \
        docker start mlflow_cicd_container || \
        docker run -d -p 5000:5000 --name mlflow_cicd_container ${{ secrets.DOCKER_USERNAME }}/mlflow_cicd:latest
        sleep 10

    - name: Test Docker container
      run: |
        docker exec mlflow_cicd_container python /mlflow_cicd/scripts/train_model.py
        docker exec mlflow_cicd_container python /mlflow_cicd/scripts/evaluate_model.py --model_name SimpleNN --model_version 1

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: mlruns
        path: mlruns/
